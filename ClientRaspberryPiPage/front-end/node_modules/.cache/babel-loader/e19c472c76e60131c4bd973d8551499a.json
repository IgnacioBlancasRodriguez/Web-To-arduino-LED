{"remainingRequest":"C:\\Users\\nacho\\Web-To-arduino-LED\\ClientArduinoPage\\front-end\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\nacho\\Web-To-arduino-LED\\ClientArduinoPage\\front-end\\node_modules\\vue-loader-v16\\dist\\templateLoader.js??ref--6!C:\\Users\\nacho\\Web-To-arduino-LED\\ClientArduinoPage\\front-end\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\nacho\\Web-To-arduino-LED\\ClientArduinoPage\\front-end\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\nacho\\Web-To-arduino-LED\\ClientArduinoPage\\front-end\\src\\components\\TurnOnOffBtn.vue?vue&type=template&id=5360a479&scoped=true&bindings={\"LedComponent\":\"props\",\"btnState\":\"data\",\"arduino\":\"data\",\"possibleStates\":\"data\",\"getState\":\"options\",\"changeState\":\"options\"}","dependencies":[{"path":"C:\\Users\\nacho\\Web-To-arduino-LED\\ClientArduinoPage\\front-end\\src\\components\\TurnOnOffBtn.vue","mtime":1607175141439},{"path":"C:\\Users\\nacho\\Web-To-arduino-LED\\ClientArduinoPage\\front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\nacho\\Web-To-arduino-LED\\ClientArduinoPage\\front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\nacho\\Web-To-arduino-LED\\ClientArduinoPage\\front-end\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\nacho\\Web-To-arduino-LED\\ClientArduinoPage\\front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\nacho\\Web-To-arduino-LED\\ClientArduinoPage\\front-end\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgdG9EaXNwbGF5U3RyaW5nIGFzIF90b0Rpc3BsYXlTdHJpbmcsIGNyZWF0ZVZOb2RlIGFzIF9jcmVhdGVWTm9kZSwgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUJsb2NrIGFzIF9jcmVhdGVCbG9jaywgd2l0aFNjb3BlSWQgYXMgX3dpdGhTY29wZUlkIH0gZnJvbSAidnVlIjsKCnZhciBfd2l0aElkID0gLyojX19QVVJFX18qL193aXRoU2NvcGVJZCgiZGF0YS12LTUzNjBhNDc5Iik7CgpleHBvcnQgdmFyIHJlbmRlciA9IC8qI19fUFVSRV9fKi9fd2l0aElkKGZ1bmN0aW9uIHJlbmRlcihfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soImJ1dHRvbiIsIHsKICAgIG9uQ2xpY2s6IF9jYWNoZVsxXSB8fCAoX2NhY2hlWzFdID0gZnVuY3Rpb24gKCRldmVudCkgewogICAgICByZXR1cm4gJG9wdGlvbnMuY2hhbmdlU3RhdGUoKTsKICAgIH0pCiAgfSwgW19jcmVhdGVWTm9kZSgiYiIsIG51bGwsICJUdXJuICIgKyBfdG9EaXNwbGF5U3RyaW5nKCRvcHRpb25zLmdldFN0YXRlKSwgMQogIC8qIFRFWFQgKi8KICApXSk7Cn0pOw=="},{"version":3,"sources":["C:\\Users\\nacho\\Web-To-arduino-LED\\ClientArduinoPage\\front-end\\src\\components\\TurnOnOffBtn.vue"],"names":[],"mappings":";;;;;uBACE,YAAA,CAAsE,QAAtE,EAAsE;AAAzD,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,UAAA,MAAA;AAAA,aAAE,QAAA,CAAA,WAAA,EAAF;AAAA,KAAA;AAAoD,GAAtE,E,CAAmC,YAAA,CAA0B,GAA1B,EAA0B,IAA1B,EAAG,UAAK,gBAAA,CAAG,QAAA,CAAA,QAAH,CAAR,EAAmB;AAAA;AAAnB,G,CAAnC,C","sourcesContent":["<template>\r\n  <button v-on:click=\"changeState()\"><b>Turn {{ getState }}</b></button>\r\n</template>\r\n<script>\r\nconst io = require(\"socket.io-client\");\r\nconst socket = io(\"http://localhost:3001\", {\r\n  transports: [\"websocket\"],\r\n  upgrade: false,\r\n  reconnect: false\r\n});\r\nlet data = {\r\n    \"clientType\": \"client\",\r\n};\r\nsocket.emit(\"client-type\", data);\r\n\r\nexport default {\r\n  name: \"NavBar\",\r\n  props: [\"LedComponent\"],\r\n  data() {\r\n    return {\r\n      btnState: \"On\",\r\n      arduino: \"\",\r\n      possibleStates: [\"On\", \"Off\"]\r\n    };\r\n  },\r\n  computed: {\r\n    getState() {\r\n      return this.possibleStates[Math.abs(this.possibleStates.indexOf(this.$store.state.ledState) - 1)];\r\n    }\r\n  },\r\n  methods: {\r\n    changeState() {\r\n      console.log(socket.connected);\r\n      if (socket.connected == true) {\r\n        socket.emit(\"get-arduinos\", {\r\n          \"request\": \"get-arduinos\"\r\n        });\r\n        socket.once(\"get-arduinos-response\", (data) => {\r\n            console.log(data);\r\n            this.arduino = `${data[`arduinos_${ 0 }`]}`;\r\n            console.log(this.arduino);\r\n            socket.emit(\"change-state\", {\r\n                \"btnState\": `${ this.possibleStates[Math.abs(this.possibleStates.indexOf(this.$store.state.ledState) - 1)] }`,\r\n                \"target\": `${this.arduino}`\r\n            });\r\n            socket.once(\"change-state-response\", (data) => {\r\n                console.log(`Response to change-state request: ${ data[\"newBtnState\"] }`);\r\n                \r\n                this.$store.commit(\"changeLedState\", { newLedState: data[\"newBtnState\"] });\r\n                return;\r\n            });\r\n            return;\r\n        });\r\n      }else {\r\n        this.$swal({\r\n          icon: 'error',\r\n          title: 'Oops...',\r\n          text: 'Something went wrong!',\r\n        });\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style scoped>\r\nbutton {\r\n  font-family: Dosis,sans-serif;\r\n  font-size: 1.2em;\r\n  padding-top: 1em;\r\n  padding-bottom: 1em;\r\n  width: 15%;\r\n  background-color: #333333;\r\n  border-radius: 10px;\r\n  border-style: none;\r\n  color: whitesmoke;\r\n  transition: 0.3s;\r\n}\r\nbutton:hover {\r\n  background-color: #576574;\r\n}\r\n.swal-title {\r\n  font-family: Dosis,sans-serif;\r\n}\r\n</style>"],"sourceRoot":""}]}