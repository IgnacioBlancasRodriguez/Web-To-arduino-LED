{"remainingRequest":"C:\\Users\\nacho\\Web-To-arduino-LED\\ClientArduinoPage\\front-end\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\nacho\\Web-To-arduino-LED\\ClientArduinoPage\\front-end\\src\\components\\TurnOnOffBtn.vue?vue&type=style&index=0&id=5360a479&scoped=true&lang=css","dependencies":[{"path":"C:\\Users\\nacho\\Web-To-arduino-LED\\ClientArduinoPage\\front-end\\src\\components\\TurnOnOffBtn.vue","mtime":1607175141439},{"path":"C:\\Users\\nacho\\Web-To-arduino-LED\\ClientArduinoPage\\front-end\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\nacho\\Web-To-arduino-LED\\ClientArduinoPage\\front-end\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\nacho\\Web-To-arduino-LED\\ClientArduinoPage\\front-end\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\nacho\\Web-To-arduino-LED\\ClientArduinoPage\\front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\nacho\\Web-To-arduino-LED\\ClientArduinoPage\\front-end\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQpidXR0b24gew0KICBmb250LWZhbWlseTogRG9zaXMsc2Fucy1zZXJpZjsNCiAgZm9udC1zaXplOiAxLjJlbTsNCiAgcGFkZGluZy10b3A6IDFlbTsNCiAgcGFkZGluZy1ib3R0b206IDFlbTsNCiAgd2lkdGg6IDE1JTsNCiAgYmFja2dyb3VuZC1jb2xvcjogIzMzMzMzMzsNCiAgYm9yZGVyLXJhZGl1czogMTBweDsNCiAgYm9yZGVyLXN0eWxlOiBub25lOw0KICBjb2xvcjogd2hpdGVzbW9rZTsNCiAgdHJhbnNpdGlvbjogMC4zczsNCn0NCmJ1dHRvbjpob3ZlciB7DQogIGJhY2tncm91bmQtY29sb3I6ICM1NzY1NzQ7DQp9DQouc3dhbC10aXRsZSB7DQogIGZvbnQtZmFtaWx5OiBEb3NpcyxzYW5zLXNlcmlmOw0KfQ0K"},{"version":3,"sources":["C:\\Users\\nacho\\Web-To-arduino-LED\\ClientArduinoPage\\front-end\\src\\components\\TurnOnOffBtn.vue"],"names":[],"mappings":";AAiEA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EACnB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAClB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAClB;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B","file":"C:/Users/nacho/Web-To-arduino-LED/ClientArduinoPage/front-end/src/components/TurnOnOffBtn.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <button v-on:click=\"changeState()\"><b>Turn {{ getState }}</b></button>\r\n</template>\r\n<script>\r\nconst io = require(\"socket.io-client\");\r\nconst socket = io(\"http://localhost:3001\", {\r\n  transports: [\"websocket\"],\r\n  upgrade: false,\r\n  reconnect: false\r\n});\r\nlet data = {\r\n    \"clientType\": \"client\",\r\n};\r\nsocket.emit(\"client-type\", data);\r\n\r\nexport default {\r\n  name: \"NavBar\",\r\n  props: [\"LedComponent\"],\r\n  data() {\r\n    return {\r\n      btnState: \"On\",\r\n      arduino: \"\",\r\n      possibleStates: [\"On\", \"Off\"]\r\n    };\r\n  },\r\n  computed: {\r\n    getState() {\r\n      return this.possibleStates[Math.abs(this.possibleStates.indexOf(this.$store.state.ledState) - 1)];\r\n    }\r\n  },\r\n  methods: {\r\n    changeState() {\r\n      console.log(socket.connected);\r\n      if (socket.connected == true) {\r\n        socket.emit(\"get-arduinos\", {\r\n          \"request\": \"get-arduinos\"\r\n        });\r\n        socket.once(\"get-arduinos-response\", (data) => {\r\n            console.log(data);\r\n            this.arduino = `${data[`arduinos_${ 0 }`]}`;\r\n            console.log(this.arduino);\r\n            socket.emit(\"change-state\", {\r\n                \"btnState\": `${ this.possibleStates[Math.abs(this.possibleStates.indexOf(this.$store.state.ledState) - 1)] }`,\r\n                \"target\": `${this.arduino}`\r\n            });\r\n            socket.once(\"change-state-response\", (data) => {\r\n                console.log(`Response to change-state request: ${ data[\"newBtnState\"] }`);\r\n                \r\n                this.$store.commit(\"changeLedState\", { newLedState: data[\"newBtnState\"] });\r\n                return;\r\n            });\r\n            return;\r\n        });\r\n      }else {\r\n        this.$swal({\r\n          icon: 'error',\r\n          title: 'Oops...',\r\n          text: 'Something went wrong!',\r\n        });\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style scoped>\r\nbutton {\r\n  font-family: Dosis,sans-serif;\r\n  font-size: 1.2em;\r\n  padding-top: 1em;\r\n  padding-bottom: 1em;\r\n  width: 15%;\r\n  background-color: #333333;\r\n  border-radius: 10px;\r\n  border-style: none;\r\n  color: whitesmoke;\r\n  transition: 0.3s;\r\n}\r\nbutton:hover {\r\n  background-color: #576574;\r\n}\r\n.swal-title {\r\n  font-family: Dosis,sans-serif;\r\n}\r\n</style>"]}]}